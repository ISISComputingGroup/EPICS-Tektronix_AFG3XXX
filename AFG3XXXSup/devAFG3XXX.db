record(stringin, "$(P)IDN")
{
    field(DESC, "SCPI identification string")
    field(DTYP, "stream")
    field(INP,  "@devAFG3XXX.proto getIDN $(PORT)")
    field(PINI, "YES")
}

### CHANNEL 1 ###

record(bi, "$(P)OUTPUT1:STATUS")
{
    field(DTYP, "stream")
    field(INP,  "@devAFG3XXX.proto getStatus(1) $(PORT)")
    field(SCAN, "1 second")
    field(ZNAM, "OFF")
    field(ONAM,"ON")	
}

record(stringin, "$(P)OUTPUT1:FUNC")
{
    field(DTYP, "stream")
    field(INP,  "@devAFG3XXX.proto getFunction(1) $(PORT)")
    field(SCAN, "1 second")	
}

record(mbbo, "$(P)OUTPUT1:FUNC:SP")
{
    field(DTYP, "stream")
    field(OUT,  "@devAFG3XXX.proto setFunction(1) $(PORT)")
    field(ZRST, "SIN")
    field(ONST, "SQU")
    field(TWST, "PULS")
    field(THST, "RAMP")
    field(FRST, "PRN")
    field(FVST, "DC")
    field(SXST, "SINC")
    field(SVST, "GAUS")
    field(EIST, "LOR")
    field(NIST, "ERIS")
    field(TEST, "EDEC")
    field(ELST, "HAV")
}

alias("$(P)OUTPUT1:FUNC", "$(P)OUTPUT1:FUNC:SP:RBV")

record(ai, "$(P)OUTPUT1:IMPEDANCE")
{
    field(DTYP, "stream")
    field(INP,  "@devAFG3XXX.proto getImpedance(1) $(PORT)")
    field(SCAN, "1 second")	
}

record(ao, "$(P)OUTPUT1:IMPEDANCE:SP")
{
    field(DTYP, "stream")
    field(OUT,  "@devAFG3XXX.proto setImpedance(1) $(PORT)")
}

alias("$(P)OUTPUT1:IMPEDANCE", "$(P)OUTPUT1:IMPEDANCE:SP:RBV")

record(stringin, "$(P)OUTPUT1:POLARITY")
{
    field(DTYP, "stream")
    field(INP,  "@devAFG3XXX.proto getPolarity(1) $(PORT)")
    field(SCAN, "1 second")	
}

record(mbbo, "$(P)OUTPUT1:POLARITY:SP")
{
    field(DTYP, "stream")
    field(OUT,  "@devAFG3XXX.proto setPolarity(1) $(PORT)")
    field(ZRST, "NORM")
    field(ONST, "INV")
}

alias("$(P)OUTPUT1:POLARITY", "$(P)OUTPUT1:POLARITY:SP:RBV")

record(ai, "$(P)OUTPUT1:VOLT")
{
    field(DTYP, "stream")
    field(INP,  "@devAFG3XXX.proto getVoltage(1) $(PORT)")
    field(SCAN, "1 second")	
}

record(ao, "$(P)OUTPUT1:VOLT:SP")
{
    field(DTYP, "stream")
    field(OUT,  "@devAFG3XXX.proto setVoltage(1) $(PORT)")
}

alias("$(P)OUTPUT1:VOLT", "$(P)OUTPUT1:VOLT:SP:RBV")

record(stringin, "$(P)OUTPUT1:VOLT:UNITS")
{
    field(DTYP, "stream")
    field(INP,  "@devAFG3XXX.proto getVoltageUnits(1) $(PORT)")
    field(SCAN, "1 second")	
}

record(mbbo, "$(P)OUTPUT1:VOLT:UNITS:SP")
{
    field(DTYP, "stream")
    field(OUT,  "@devAFG3XXX.proto setVoltageUnits(1) $(PORT)")
    field(ZRST, "VPP")
    field(ONST, "VRMS")
    field(TWST, "DBM")
}

alias("$(P)OUTPUT1:VOLT:UNITS", "$(P)OUTPUT1:VOLT:UNITS:SP:RBV")

record(ai, "$(P)OUTPUT1:VOLT:LOWLIMIT")
{
    field(DESC, "The lowest voltage that can be set")
    field(DTYP, "stream")
    field(INP,  "@devAFG3XXX.proto getVoltageLowLimit(1) $(PORT)")
    field(SCAN, "1 second")	
}

record(ao, "$(P)OUTPUT1:VOLT:LOWLIMIT:SP")
{
    field(DTYP, "stream")
    field(OUT,  "@devAFG3XXX.proto setVoltageLowLimit(1) $(PORT)")
}

alias("$(P)OUTPUT1:VOLT:LOWLIMIT", "$(P)OUTPUT1:VOLT:LOWLIMIT:SP:RBV")

record(ai, "$(P)OUTPUT1:VOLT:HIGHLIMIT")
{
    field(DESC, "The highest voltage that can be set")
    field(DTYP, "stream")
    field(INP,  "@devAFG3XXX.proto getVoltageHighLimit(1) $(PORT)")
    field(SCAN, "1 second")	
}

record(ao, "$(P)OUTPUT1:VOLT:HIGHLIMIT:SP")
{
    field(DTYP, "stream")
    field(OUT,  "@devAFG3XXX.proto setVoltageHighLimit(1) $(PORT)")
}

alias("$(P)OUTPUT1:VOLT:HIGHLIMIT", "$(P)OUTPUT1:VOLT:HIGHLIMIT:SP:RBV")

record(ai, "$(P)OUTPUT1:VOLT:LOW")
{
    field(DESC, "The low end voltage")
    field(DTYP, "stream")
    field(INP,  "@devAFG3XXX.proto getVoltageLowLevel(1) $(PORT)")
    field(SCAN, "1 second")	
}

record(ao, "$(P)OUTPUT1:VOLT:LOW:SP")
{
    field(DTYP, "stream")
    field(OUT,  "@devAFG3XXX.proto setVoltageLowLevel(1) $(PORT)")
}

alias("$(P)OUTPUT1:VOLT:LOW", "$(P)OUTPUT1:VOLT:LOW:SP:RBV")

record(ai, "$(P)OUTPUT1:VOLT:HIGH")
{
    field(DESC, "The high end voltage")
    field(DTYP, "stream")
    field(INP,  "@devAFG3XXX.proto getVoltageHighLevel(1) $(PORT)")
    field(SCAN, "1 second")	
}

record(ao, "$(P)OUTPUT1:VOLT:HIGH:SP")
{
    field(DTYP, "stream")
    field(OUT,  "@devAFG3XXX.proto setVoltageHighLevel(1) $(PORT)")
}

alias("$(P)OUTPUT1:VOLT:HIGH", "$(P)OUTPUT1:VOLT:HIGH:SP:RBV")

record(ai, "$(P)OUTPUT1:VOLT:OFFSET")
{
    field(DTYP, "stream")
    field(INP,  "@devAFG3XXX.proto getVoltageOffset(1) $(PORT)")
    field(SCAN, "1 second")	
}

record(ao, "$(P)OUTPUT1:VOLT:OFFSET:SP")
{
    field(DTYP, "stream")
    field(OUT,  "@devAFG3XXX.proto setVoltageOffset(1) $(PORT)")
}

alias("$(P)OUTPUT1:VOLT:OFFSET", "$(P)OUTPUT1:VOLT:OFFSET:SP:RBV")

record(ai, "$(P)OUTPUT1:FREQ")
{
    field(DTYP, "stream")
    field(INP,  "@devAFG3XXX.proto getFrequency(1) $(PORT)")
    field(SCAN, "1 second")	
}

record(ao, "$(P)OUTPUT1:FREQ:SP")
{
    field(DTYP, "stream")
    field(OUT,  "@devAFG3XXX.proto setFrequency(1) $(PORT)")
}

alias("$(P)OUTPUT1:FREQ", "$(P)OUTPUT1:FREQ:SP:RBV")

record(ai, "$(P)OUTPUT1:PHASE")
{
    field(DTYP, "stream")
    field(INP,  "@devAFG3XXX.proto getPhase(1) $(PORT)")
    field(SCAN, "1 second")
    field(EGU, "radians")
}

record(ao, "$(P)OUTPUT1:PHASE:SP")
{
    field(DTYP, "stream")
    field(OUT,  "@devAFG3XXX.proto setPhase(1) $(PORT)")
    field(EGU, "radians")
}

alias("$(P)OUTPUT1:PHASE", "$(P)OUTPUT1:PHASE:SP:RBV")


